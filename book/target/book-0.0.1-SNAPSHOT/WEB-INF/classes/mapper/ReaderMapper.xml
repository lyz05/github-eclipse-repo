<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.home999.book.dao.ReaderMapper">
  <resultMap id="BaseResultMap" type="cc.home999.book.bean.Reader">
    <id column="readerno" jdbcType="CHAR" property="readerno" />
    <result column="readername" jdbcType="CHAR" property="readername" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="identitycard" jdbcType="CHAR" property="identitycard" />
    <result column="workunit" jdbcType="CHAR" property="workunit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    readerno, readername, sex, identitycard, workunit
  </sql>
  <select id="selectByExample" parameterType="cc.home999.book.bean.ReaderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Reader
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Reader
    where readerno = #{readerno,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from Reader
    where readerno = #{readerno,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cc.home999.book.bean.ReaderExample">
    delete from Reader
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.home999.book.bean.Reader">
    insert into Reader (readerno, readername, sex, 
      identitycard, workunit)
    values (#{readerno,jdbcType=CHAR}, #{readername,jdbcType=CHAR}, #{sex,jdbcType=CHAR}, 
      #{identitycard,jdbcType=CHAR}, #{workunit,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="cc.home999.book.bean.Reader">
    insert into Reader
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="readerno != null">
        readerno,
      </if>
      <if test="readername != null">
        readername,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="identitycard != null">
        identitycard,
      </if>
      <if test="workunit != null">
        workunit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="readerno != null">
        #{readerno,jdbcType=CHAR},
      </if>
      <if test="readername != null">
        #{readername,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="identitycard != null">
        #{identitycard,jdbcType=CHAR},
      </if>
      <if test="workunit != null">
        #{workunit,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.home999.book.bean.ReaderExample" resultType="java.lang.Long">
    select count(*) from Reader
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Reader
    <set>
      <if test="record.readerno != null">
        readerno = #{record.readerno,jdbcType=CHAR},
      </if>
      <if test="record.readername != null">
        readername = #{record.readername,jdbcType=CHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.identitycard != null">
        identitycard = #{record.identitycard,jdbcType=CHAR},
      </if>
      <if test="record.workunit != null">
        workunit = #{record.workunit,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Reader
    set readerno = #{record.readerno,jdbcType=CHAR},
      readername = #{record.readername,jdbcType=CHAR},
      sex = #{record.sex,jdbcType=CHAR},
      identitycard = #{record.identitycard,jdbcType=CHAR},
      workunit = #{record.workunit,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.home999.book.bean.Reader">
    update Reader
    <set>
      <if test="readername != null">
        readername = #{readername,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="identitycard != null">
        identitycard = #{identitycard,jdbcType=CHAR},
      </if>
      <if test="workunit != null">
        workunit = #{workunit,jdbcType=CHAR},
      </if>
    </set>
    where readerno = #{readerno,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.home999.book.bean.Reader">
    update Reader
    set readername = #{readername,jdbcType=CHAR},
      sex = #{sex,jdbcType=CHAR},
      identitycard = #{identitycard,jdbcType=CHAR},
      workunit = #{workunit,jdbcType=CHAR}
    where readerno = #{readerno,jdbcType=CHAR}
  </update>
</mapper>